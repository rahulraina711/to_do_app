{"version":3,"sources":["store/todos.js","Components/ToDo.js","App.js","index.js","store/configStore.js"],"names":["taskAdded","createAction","taskRemoved","lastId","initialState","tasks","arr","i","localStorage","length","item","id","desc","key","done","getItem","push","setIniState","createReducer","state","action","payload","filter","task","ToDo","props","useState","setDone","color","setColor","dispatch","useDispatch","useEffect","console","log","className","onClick","setItem","removeItem","App","textValue","setTextValue","tasksFromState","useSelector","renderTasks","map","TextField","label","variant","value","onChange","e","target","store","configureStore","reducer","ReactDOM","render","document","getElementById"],"mappings":"4TAEaA,EAAYC,YAAa,aAEzBC,EAAcD,YAAa,eAIpCE,EAAS,EAaPC,EAAe,CAACC,MAZF,WAEhB,IADA,IAAIC,EAAM,GACFC,EAAE,EAAEA,EAAEC,aAAaC,OAAOF,IAAI,CAClC,IAAMG,EAAK,CACPC,GAAG,KAAKJ,EACRK,KAAMJ,aAAaK,IAAIN,GACvBO,KAAMN,aAAaO,QAAQP,aAAaK,IAAIN,KAEhDD,EAAIU,KAAKN,GAEb,OAAOJ,EAEiBW,IACbC,cAAcd,EAAa,CACtCJ,UAAW,SAACmB,EAAOC,GACfD,EAAMd,MAAMW,KAAK,CACbL,KAAMR,EACNS,KAAMQ,EAAOC,QAAQT,QAI7BV,YAAa,SAACiB,EAAOC,GAAW,OAAO,2BAChCD,GADyB,IAE5Bd,MAAOc,EAAMd,MAAMiB,QAAO,SAAAC,GAAI,OAAGA,EAAKZ,KAAOS,EAAOC,QAAQV,W,OCxBrD,SAASa,EAAMC,GAAQ,IAAD,EAETC,oBAAS,GAFA,mBAE1BZ,EAF0B,KAEpBa,EAFoB,OAGPD,mBAAS,cAHF,mBAG1BE,EAH0B,KAGnBC,EAHmB,KAI3BC,EAAWC,cAiCjB,OA9BAC,qBAAU,WAYU,SAAbP,EAAMX,MACLmB,QAAQC,IAAI,WACZP,GAAQ,GACRE,EAAS,oBAEQ,UAAbJ,EAAMX,OACVmB,QAAQC,IAAI,aACZP,GAAQ,GACRE,EAAS,iBAlBf,IA6BE,sBAAKM,UAAWP,EAAhB,UACI,qBAAKO,UAAU,OAAOC,QAR9B,WACI5B,aAAa6B,QAAQZ,EAAMF,MAAM,GACjCI,GAAQ,GACRE,EAAS,oBAKL,SAA0CJ,EAAMF,OAChD,qBAAKY,UAAU,OAAOC,QA7B9B,WACIN,EAAS5B,EAAY,CAACS,GAAGc,EAAMd,MAC/BH,aAAa8B,WAAWb,EAAMF,MAC9BM,EAAS,WA0BL,SAA4Cf,EAAO,cAAC,IAAD,IAAgB,cAAC,IAAD,SCGhEyB,MA1Cf,WAAgB,IAAD,EACqBb,mBAAS,IAD9B,mBACNc,EADM,KACKC,EADL,KAEPC,EAAiBC,aAAY,SAAAxB,GAAK,OAAEA,EAAMd,SAC1CyB,EAAWC,cAajB,SAASa,IACP,GAAGF,EACD,OAAOA,EAAeG,KAAI,SAACtB,EAAKhB,GAC9B,OAAO,cAACiB,EAAD,CAAqBD,KAAMA,EAAKX,KAAMD,GAAIY,EAAKZ,GAAIG,KAAMS,EAAKT,MAAlDS,EAAKZ,OAK9B,OAnBAqB,qBAAU,WACRY,MACA,IAkBA,qBAAKT,UAAU,aAAf,SACE,sBAAKA,UAAU,aAAf,UACE,qBAAKA,UAAU,YAAf,+BAGA,qBAAKA,UAAU,SAAf,SACGS,MAEL,sBAAKT,UAAU,YAAf,UACI,cAACW,EAAA,EAAD,CAAWX,UAAU,kBAAkBxB,GAAG,eAAeoC,MAAM,aAAaC,QAAQ,SAASC,MAAOT,EAAWU,SAAU,SAACC,GAAKV,EAAaU,EAAEC,OAAOH,UACrJ,cAAC,IAAD,CAASd,UAAU,eAAexB,GAAG,gBAAgByB,QAzB7D,WACEN,EAAS9B,EAAU,CAACY,KAAK4B,KACzBhC,aAAa6B,QAAQG,GAAW,GAChCC,EAAa,gBCdjB,IAAMY,ECJKC,YAAe,CAClBC,YDKRC,IAASC,OACP,cAAC,IAAD,CAAUJ,MAAOA,EAAjB,SACE,cAAC,EAAD,MAGFK,SAASC,eAAe,W","file":"static/js/main.51ee67aa.chunk.js","sourcesContent":["import {createAction, createReducer} from '@reduxjs/toolkit';\n\nexport const taskAdded = createAction(\"taskAdded\");\n\nexport const taskRemoved = createAction(\"taskRemoved\");\n\n// console.log(taskAdded({desc:\"Here is task\"}));\n\nlet lastId = 0;\nconst setIniState = ()=>{\n    let arr = []\n    for(let i=0;i<localStorage.length;i++){\n        const item={\n            id:1234+i,\n            desc: localStorage.key(i),\n            done: localStorage.getItem(localStorage.key(i))\n        }\n        arr.push(item);\n    }\n    return arr\n}\nconst initialState = {tasks:setIniState()};\nexport default createReducer(initialState,{\n    taskAdded: (state, action) => {\n        state.tasks.push({\n            id: ++lastId,\n            desc: action.payload.desc,\n        })\n    },\n\n    taskRemoved: (state, action) =>{return {\n        ...state,\n        tasks: state.tasks.filter(task=> task.id !== action.payload.id)\n    }}\n});\n\n","import React, { useEffect, useState } from 'react';\nimport CheckIcon from '@material-ui/icons/Check';\nimport DeleteIcon from '@material-ui/icons/Delete';\n\nimport './todo.scss';\nimport { useDispatch } from 'react-redux';\nimport { taskRemoved } from '../store/todos';\n\nexport default function ToDo (props) {\n\n    const [done, setDone] = useState(false);\n    const [color, setColor] = useState(\"write-task\");\n    const dispatch = useDispatch();\n    // const tasks = useSelector(state=>state.tasks);\n\n    useEffect(()=>{\n        checkAttrs();\n    },[])\n\n    function deleteTask (){\n        dispatch(taskRemoved({id:props.id}))\n        localStorage.removeItem(props.task);\n        setColor(\"delete\");\n    }\n\n    function checkAttrs(){\n        //console.log(props.res);\n        if(props.done===\"true\"){\n            console.log(\"if here\");\n            setDone(true);\n            setColor(\"write-task-done\");\n        }\n        else if(props.done===\"false\"){\n            console.log(\"else here\");\n            setDone(false);\n            setColor(\"write-task\");\n        }        \n    }\n\n    function setAttrs(){\n        localStorage.setItem(props.task, true);\n        setDone(true);\n        setColor(\"write-task-done\");\n    }\n\n    return(\n        <div className={color} >\n            <div className=\"text\" onClick={setAttrs}>{props.task}</div>\n            <div className=\"done\" onClick={deleteTask}>{done ? <CheckIcon /> : <DeleteIcon />}</div> \n        </div>\n    )\n}","import React,{useState, useEffect} from 'react';\nimport './app.scss';\nimport AddIcon from '@material-ui/icons/Add';\nimport { TextField } from '@material-ui/core';\nimport ToDos from './Components/ToDo';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {taskAdded} from './store/todos';\n\n\nfunction App() {\n  const [textValue, setTextValue] = useState(\"\"); // controlledDOM element value\n  const tasksFromState = useSelector(state=>state.tasks);\n  const dispatch = useDispatch();\n\n  useEffect(()=>{\n    renderTasks();\n  },[])\n \n\n  function addTask (){\n    dispatch(taskAdded({desc:textValue}));\n    localStorage.setItem(textValue, false)\n    setTextValue(\"\");\n   }\n\n  function renderTasks () {\n    if(tasksFromState){\n      return tasksFromState.map((task,i)=>{\n        return <ToDos key={task.id} task={task.desc} id={task.id} done={task.done} />\n      })\n    }\n  }\n\n  return (\n    <div className=\"main-frame\">\n      <div className=\"to-do-area\">\n        <div className=\"app-title\">\n          To-dos' for today\n        </div>\n        <div className=\"to-dos\">\n          {renderTasks()}\n        </div>\n      <div className=\"add-to-do\">\n          <TextField className=\"to-do-text-area\" id=\"filled-basic\" label=\"Add a Task\" variant=\"filled\" value={textValue} onChange={(e)=>{setTextValue(e.target.value)}} />\n          <AddIcon className=\"add-btn-plus\" id=\"add-to-do-btn\" onClick={addTask}/>\n      </div>\n      </div>\n    </div>\n  )\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport confStore from './store/configStore';\n// import {taskAdded} from './store/todos';\nimport {Provider} from 'react-redux';\n\nconst store = confStore();\n// store.dispatch(taskAdded({desc:\"task No. 1\"}));\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>\n    ,\n  document.getElementById('root')\n);\n","import {configureStore} from '@reduxjs/toolkit';\nimport reducer from './todos';\n\nexport default function confStore (){\n    return configureStore({\n        reducer\n    });\n};"],"sourceRoot":""}