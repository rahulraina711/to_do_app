{"version":3,"sources":["Components/ToDo.js","App.js","index.js"],"names":["ToDo","props","useState","done","setDone","color","setColor","useEffect","console","log","className","onClick","localStorage","setItem","task","removeItem","App","Date","value","setValue","textValue","setTextValue","todoList","setTodoList","renderTasks","map","i","taskList","length","x","key","getItem","push","checkLocalStorage","interval","setInterval","clearInterval","clear","TextField","id","label","variant","onChange","e","target","tasks","ReactDOM","render","document","getElementById"],"mappings":"oVAMe,SAASA,EAAMC,GAAQ,IAAD,EAETC,oBAAS,GAFA,mBAE1BC,EAF0B,KAEpBC,EAFoB,OAGPF,mBAAS,cAHF,mBAG1BG,EAH0B,KAGnBC,EAHmB,KAkCjC,OA7BAC,qBAAU,WAUNC,QAAQC,IAAIR,EAAME,MACF,SAAbF,EAAME,MACLK,QAAQC,IAAI,WACZL,GAAQ,GACRE,EAAS,oBAEQ,UAAbL,EAAME,OACVK,QAAQC,IAAI,aACZL,GAAQ,GACRE,EAAS,iBAjBf,IA4BE,sBAAKI,UAAWL,EAAhB,UACI,qBAAKK,UAAU,OAAOC,QAR9B,WACIC,aAAaC,QAAQZ,EAAMa,MAAM,GACjCV,GAAQ,GACRE,EAAS,oBAKL,SAA0CL,EAAMa,OAChD,qBAAKJ,UAAU,OAAOC,QA5B9B,WACIC,aAAaG,WAAWd,EAAMa,MAC9BR,EAAS,WA0BL,SAA4CH,EAAO,cAAC,IAAD,IAAgB,cAAC,IAAD,SC2ChEa,MA7Ef,WAAgB,IAAD,EACad,mBAAS,IAAIe,MAD1B,mBACNC,EADM,KACCC,EADD,OAEqBjB,mBAAS,IAF9B,mBAENkB,EAFM,KAEKC,EAFL,OAGmBnB,mBAAS,IAH5B,mBAGNoB,EAHM,KAGIC,EAHJ,KAiDb,SAASC,IACP,OAAOF,EAASG,KAAI,SAACX,EAAKY,GACxB,OAAO,cAAC1B,EAAD,CAAec,KAAMA,EAAKA,KAAMX,KAAMW,EAAKX,MAA/BuB,MAIvB,OAlDAnB,qBAAU,YAwBV,WACE,IAAMoB,EAAW,GACjB,GAAyB,IAAtBf,aAAagB,OAAW,CACzB,IAAI,IAAIF,EAAE,EAAGA,EAAGd,aAAagB,OAAOF,IAAI,CACtC,IAAMG,EAAI,CACRf,KAAMF,aAAakB,IAAIJ,GACvBvB,KAAMS,aAAamB,QAAQnB,aAAakB,IAAIJ,KAE9CC,EAASK,KAAKH,GAEhBN,EAAYI,IAjCdM,GACAT,MACA,IAEFjB,qBAAU,WACR,IAAM2B,EAAWC,aACf,kBAAMhB,EAAS,IAAIF,QACnB,KAGF,OAAO,WACLmB,cAAcF,MAEf,IAqCD,sBAAKxB,UAAU,aAAf,UACE,yBAAQA,UAAU,YAAYC,QAblC,WACEC,aAAayB,QACbd,EAAY,KAWV,sBAA0D,cAAC,IAAD,OAC1D,qBAAKb,UAAU,QAAf,SACE,cAAC,IAAD,CAAOQ,MAAOA,MAEhB,sBAAKR,UAAU,aAAf,UACE,qBAAKA,UAAU,YAAf,8BAGA,qBAAKA,UAAU,SAAf,SACGc,MAEL,sBAAKd,UAAU,YAAf,UACI,cAAC4B,EAAA,EAAD,CAAW5B,UAAU,kBAAkB6B,GAAG,eAAeC,MAAM,aAAaC,QAAQ,SAASvB,MAAOE,EAAWsB,SAAU,SAACC,GAAKtB,EAAasB,EAAEC,OAAO1B,UACrJ,cAAC,IAAD,CAASqB,GAAG,gBAAgB5B,QAjDpC,WAEEC,aAAaC,QAAQO,GAAW,GAChC,IAAIyB,EAAK,sBAAOvB,GAAP,CAAiB,CAACR,KAAKM,EAAWjB,MAAM,KACjDoB,EAAYsB,GACZxB,EAAa,iBC7BjByB,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.b6917001.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport CheckIcon from '@material-ui/icons/Check';\nimport DeleteIcon from '@material-ui/icons/Delete';\n\nimport './todo.scss';\n\nexport default function ToDo (props) {\n\n    const [done, setDone] = useState(false);\n    const [color, setColor] = useState(\"write-task\");\n\n    useEffect(()=>{\n        checkAttrs();\n    },[])\n\n    function deleteTask (){\n        localStorage.removeItem(props.task);\n        setColor(\"delete\");\n    }\n\n    function checkAttrs(){\n        console.log(props.done);\n        if(props.done===\"true\"){\n            console.log(\"if here\");\n            setDone(true);\n            setColor(\"write-task-done\");\n        }\n        else if(props.done===\"false\"){\n            console.log(\"else here\");\n            setDone(false);\n            setColor(\"write-task\");\n        }        \n    }\n\n    function setAttrs(){\n        localStorage.setItem(props.task, true);\n        setDone(true);\n        setColor(\"write-task-done\");\n    }\n\n    return(\n        <div className={color} >\n            <div className=\"text\" onClick={setAttrs}>{props.task}</div>\n            <div className=\"done\" onClick={deleteTask}>{done ? <CheckIcon /> : <DeleteIcon />}</div> \n        </div>\n    )\n}","import React,{useState, useEffect} from 'react';\nimport './app.scss';\nimport Clock from \"react-clock\";\nimport 'react-clock/dist/Clock.css';\nimport AddIcon from '@material-ui/icons/Add';\nimport ClearIcon from '@material-ui/icons/ClearAll';\nimport { TextField } from '@material-ui/core';\nimport ToDos from './Components/ToDo';\n\nfunction App() {\n  const [value, setValue] = useState(new Date()); // clock time value\n  const [textValue, setTextValue] = useState(\"\"); // controlledDOM element value\n  const [todoList, setTodoList] = useState([]);   // all the tasks are stored in this state\n\n  useEffect(()=>{\n    checkLocalStorage();\n    renderTasks();\n  },[])\n \n  useEffect(() => {\n    const interval = setInterval(\n      () => setValue(new Date()),\n      1000\n    );\n \n    return () => {\n      clearInterval(interval);\n    }\n  }, []);\n\n  function addTask (){\n    //console.log(\"clicked Add\", textValue);\n    localStorage.setItem(textValue, false)\n    let tasks = [...todoList, {task:textValue, done: false}];\n    setTodoList(tasks);\n    setTextValue(\"\");\n  }\n\n  function checkLocalStorage(){\n    const taskList = [];\n    if(localStorage.length!==0){\n      for(let i=0; i< localStorage.length;i++){\n        const x = {\n          task :localStorage.key(i),\n          done :localStorage.getItem(localStorage.key(i))\n        }; //object end\n        taskList.push(x);\n      }// for end\n      setTodoList(taskList);\n\n    }\n  }\n\n  function clearAll(){\n    localStorage.clear();\n    setTodoList([]);\n  }\n\n  function renderTasks () {\n    return todoList.map((task,i)=>{\n      return <ToDos key={i} task={task.task} done={task.done} />\n    })\n  }\n \n  return (\n    <div className=\"main-frame\">\n      <button className=\"clear-all\" onClick={clearAll}>Clear All<ClearIcon /></button>\n      <div className=\"clock\">\n        <Clock value={value} />\n      </div>\n      <div className=\"to-do-area\">\n        <div className=\"app-title\">\n          Todays Work List\n        </div>\n        <div className=\"to-dos\">\n          {renderTasks()}\n        </div>\n      <div className=\"add-to-do\">\n          <TextField className=\"to-do-text-area\" id=\"filled-basic\" label=\"Add a Task\" variant=\"filled\" value={textValue} onChange={(e)=>{setTextValue(e.target.value)}} />\n          <AddIcon id=\"add-to-do-btn\" onClick={addTask}/>\n      </div>\n      </div>\n    </div>\n  )\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}